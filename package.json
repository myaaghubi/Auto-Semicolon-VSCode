{
  "name": "auto-semicolon-vscode",
  "displayName": "Auto Semicolon",
  "description": "A handy tool to make programming delicious. All programming languages include both `Semicolon separated` and `Non-Semicolon separated` supported.",
  "version": "1.5.2",
  "publisher": "myaaghubi",
  "license": "GPL-3.0",
  "icon": "icon.png",
  "bugs": {
    "url": "https://github.com/myaaghubi/Auto-Semicolon-VSCode/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/myaaghubi/Auto-Semicolon-VSCode"
  },
  "engines": {
    "vscode": "^1.31.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "auto-semicolon",
    "helper",
    "keybindings",
    "shortcut",
    "auto",
    "semicolon",
    "handy",
    "php",
    "perl",
    "javascript",
    "typescript",
    "c#",
    "c",
    "c++",
    "java",
    "dart",
    "r",
    "swift",
    "go",
    "python",
    "pascal",
    "delphi",
    "shell",
    "bash",
    "bat",
    "scala",
    "kotlin"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onCommand:auto-semicolon-vscode.position-insert-semicolon",
    "onCommand:auto-semicolon-vscode.auto-insert-semicolon",
    "onCommand:auto-semicolon-vscode.auto-insert-semicolon-fte"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "auto-semicolon-vscode.position-insert-semicolon",
        "title": "Insert At The Position",
        "category": "Auto Semicolon"
      },
      {
        "command": "auto-semicolon-vscode.auto-insert-semicolon",
        "title": "Auto Insert",
        "category": "Auto Semicolon"
      },
      {
        "command": "auto-semicolon-vscode.auto-insert-semicolon-fte",
        "title": "Auto Insert At The End",
        "category": "Auto Semicolon"
      }
    ],
    "keybindings": [
      {
        "command": "auto-semicolon-vscode.position-insert-semicolon",
        "key": "alt+; ;",
        "mac": "alt+; ;",
        "when": "editorTextFocus"
      },
      {
        "command": "auto-semicolon-vscode.auto-insert-semicolon",
        "key": ";",
        "mac": ";",
        "when": "editorTextFocus"
      },
      {
        "command": "auto-semicolon-vscode.auto-insert-semicolon-fte",
        "key": "alt+; alt+;",
        "mac": "alt+; alt+;",
        "when": "editorTextFocus"
      }
    ],
    "configuration": {
      "title": "Auto Semicolon",
      "properties": {
        "autoSemicolon.autoInsertSemicolon.unallowedEnds": {
          "default": ";,{,}",
          "description": "For lines ended to characters above, apply `Auto Move` instead of `Auto Insert Semicolon` (comma-separated).",
          "type": "string"
        },
        "autoSemicolon.supportedLanguageId.autoInsertSemicolon": {
          "default": "javascript,typescript,php,perl,c,objective-c,cpp,objective-cpp,csharp,dart,java,swift,ruby",
          "description": "Languages (language-ids, comma-separated) supported for `AutoInsertSemicolon`.\nLanguages not included in both of the lists will be ignored via this extension.",
          "type": "string"
        },
        "autoSemicolon.supportedLanguageId.autoMoveEnable": {
          "default": true,
          "description": "`Auto Move` feature?",
          "type": "boolean"
        },
        "autoSemicolon.supportedLanguageId.autoMoveFormats": {
          "default": "go,python,pascal,delphi,bash,shellscript,bat,scala,kotlin,r,fsharp",
          "description": "Languages (language-ids, comma-separated) supported for `Auto Move To End` (happens by pressing `;`) .\nLanguages not included in both of the lists will be ignored via this extension.",
          "type": "string"
        },
        "autoSemicolon.supportedLanguageId.ignores.quotes": {
          "default": true,
          "description": "Ignore while in quotes?",
          "type": "boolean"
        },
        "autoSemicolon.supportedLanguageId.ignores.theForStatement": {
          "default": true,
          "description": "Consider `for (..;..;..)` statement",
          "type": "boolean"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/vscode": "^1.31.0",
    "@typescript-eslint/eslint-plugin": "^5.53.0",
    "@typescript-eslint/parser": "^5.53.0",
    "@vscode/test-electron": "^2.2.3",
    "eslint": "^8.34.0",
    "glob": "^10.4.5",
    "mocha": "^10.7.3",
    "typescript": "^4.9.5"
  }
}
